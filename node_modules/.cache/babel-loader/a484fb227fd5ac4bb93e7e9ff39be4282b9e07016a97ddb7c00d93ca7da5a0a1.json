{"ast":null,"code":"// import React, { useState, useRef, useEffect } from 'react'\n// import { useCart, useDispatchCart } from './ConextReducer';\n\n// const Card = (props) => {\n\n// let dispatch=useDispatchCart();\n// let data=useCart();\n// const priceRef=useRef();\n// let options=props.options;\n// let priceOptions=Object.keys(options);\n// const [qty,setQty]=useState(1);\n// const [size,setSize]=useState(\"\")\n// const handaleAddToCart=async()=>{\n//     let food=[]\n//     for(const item of data){\n//         if(item.id=== props.foodItem._id){\n//             food=item;\n//             break;\n//         }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//   await dispatch({\n//     type:\"ADD\",\n//     id:props.foodItem._id,\n//     name:props.foodItem.name,\n//     price:finalPrice,\n//     qty:qty,size:size\n//   })\n//   console.log(data);\n// }\n// let finalPrice=qty*parseInt(options[size]);\n// useEffect(()=>{\n//   setSize(priceRef.current.value)\n// })\n//     return (\n//         <div>\n//             <div className=\"card mt-3 \" style={{ width: '18rem', \"maxHeight\": '360px' }}>\n//                 <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{height:\"150px\",objectFit:\"fill\"}} />\n//                 <div className=\"card-body\">\n//                     <h5 className=\"card-title\" style={{ color: \"black\" }}>{props.foodItem.name}</h5>\n//                     <div className='container w-100'>\n//                         <select className='m-2 h-100  bg-success rounded' style={{ color: \"white\" }} onChange={(e)=> setQty(e.target.value)}>\n//                             {Array.from(Array(6), (e, i) => {\n//                                 return (\n//                                     <option key={i + 1} value={i + 1}>{i + 1}</option>\n//                                 )\n//                             })}\n//                         </select>\n\n//                         <select className='m-2 h-100  bg-success rounded' ref={priceRef} style={{ color: \"white\" }} onChange={(e)=> setSize(e.target.value)} >\n//                            {priceOptions.map((data)=>{\n//                             return <option key={data} value={data}>{data}</option>\n//                            })}\n//                         </select>\n//                         <div className='d-inline h-100 fs-5' style={{ color: \"black\" }}>\n//                             Rs{finalPrice}/-\n//                         </div>\n//                     </div>\n//                     <hr />\n//                     <button className={`btn btn-success justify-center ms-2`} onClick={handaleAddToCart}>Add to Cart</button>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Card","map":{"version":3,"names":[],"sources":["/home/mahesh/GoFood/mernapp/src/components/Card.jsx"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react'\n// import { useCart, useDispatchCart } from './ConextReducer';\n\n// const Card = (props) => {\n\n// let dispatch=useDispatchCart();\n// let data=useCart();\n// const priceRef=useRef();\n// let options=props.options;\n// let priceOptions=Object.keys(options);\n// const [qty,setQty]=useState(1);\n// const [size,setSize]=useState(\"\")\n// const handaleAddToCart=async()=>{\n//     let food=[]\n//     for(const item of data){\n//         if(item.id=== props.foodItem._id){\n//             food=item;\n//             break;\n//         }\n//     }\n//     console.log(food)\n//     console.log(new Date())\n//     if (food !== []) {\n//       if (food.size === size) {\n//         await dispatch({ type: \"UPDATE\", id: foodItem._id, price: finalPrice, qty: qty })\n//         return\n//       }\n//       else if (food.size !== size) {\n//         await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, price: finalPrice, qty: qty, size: size,img: props.ImgSrc })\n//         console.log(\"Size different so simply ADD one more to the list\")\n//         return\n//       }\n//       return\n//     }\n\n//   await dispatch({\n//     type:\"ADD\",\n//     id:props.foodItem._id,\n//     name:props.foodItem.name,\n//     price:finalPrice,\n//     qty:qty,size:size\n//   })\n//   console.log(data);\n// }\n// let finalPrice=qty*parseInt(options[size]);\n// useEffect(()=>{\n//   setSize(priceRef.current.value)\n// })\n//     return (\n//         <div>\n//             <div className=\"card mt-3 \" style={{ width: '18rem', \"maxHeight\": '360px' }}>\n//                 <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{height:\"150px\",objectFit:\"fill\"}} />\n//                 <div className=\"card-body\">\n//                     <h5 className=\"card-title\" style={{ color: \"black\" }}>{props.foodItem.name}</h5>\n//                     <div className='container w-100'>\n//                         <select className='m-2 h-100  bg-success rounded' style={{ color: \"white\" }} onChange={(e)=> setQty(e.target.value)}>\n//                             {Array.from(Array(6), (e, i) => {\n//                                 return (\n//                                     <option key={i + 1} value={i + 1}>{i + 1}</option>\n//                                 )\n//                             })}\n//                         </select>\n\n//                         <select className='m-2 h-100  bg-success rounded' ref={priceRef} style={{ color: \"white\" }} onChange={(e)=> setSize(e.target.value)} >\n//                            {priceOptions.map((data)=>{\n//                             return <option key={data} value={data}>{data}</option>\n//                            })}\n//                         </select>\n//                         <div className='d-inline h-100 fs-5' style={{ color: \"black\" }}>\n//                             Rs{finalPrice}/-\n//                         </div>\n//                     </div>\n//                     <hr />\n//                     <button className={`btn btn-success justify-center ms-2`} onClick={handaleAddToCart}>Add to Cart</button>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Card"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}